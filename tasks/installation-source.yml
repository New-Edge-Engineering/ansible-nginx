---
# Adds LDAP authentication support rather than a dynamic build.
- name: ensure build tools are installed
  apt:
    pkg: build-essential
    state: present

# Install NGINX dependencies
- name: ensure dependencies are installed
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - libpcre3-dev
    - zlib1g-dev
    - libssl-dev
    - libxslt1-dev
    - libgd-dev
    - libgeoip-dev
    - libldap2-dev

- name: download source files
  unarchive:
    dest: "{{ nginx_tmp }}"
    src: "{{ item }}"
    copy: no
  with_items:
    - http://nginx.org/download/nginx-1.4.6.tar.gz
    - https://nginx-auth-ldap.googlecode.com/files/ngx_http_auth_ldap_module-1.0-a3.tar.gz

- name: ensure supporting directories exist
  file:
    path: /var/lib/nginx/body
    state: directory
    mode: 0755
    owner: "{{ nginx_owner }}"

- name: configure nginx
  shell: ./configure --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wno-unused-but-set-variable -D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro' --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --with-debug --with-pcre-jit --with-ipv6 --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_dav_module --with-http_geoip_module --with-http_gzip_static_module --with-http_image_filter_module --with-http_spdy_module --with-http_sub_module --with-http_xslt_module --with-mail --with-mail_ssl_module --add-module=../ngx_http_auth_ldap_module-1.0-a3
  args:
    chdir: "/tmp/nginx-1.4.6"

- name: make and install nginx
  shell: make && make install
  args:
    chdir: "/tmp/nginx-1.4.6"
  async: "{{ nginx_make_async }}"
  poll: 0
  register: make_nginx_sleeper

- name: 'make nginx - check on fire and forget task'
  async_status: jid={{ make_nginx_sleeper.ansible_job_id }}
  register: job_nginx_result
  until: job_nginx_result.finished
  retries: "{{ nginx_make_async }}"

- name: ensure service file exists
  copy:
    dest: /etc/init.d/nginx
    src: debian_service
    mode: 0755

- name: Start the nginx service
  service:
    name: nginx
    state: restarted
    enabled: yes